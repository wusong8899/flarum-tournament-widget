{"version":3,"file":"admin.js","sources":["../src/admin/components/PlatformManagement.tsx","../src/admin/components/RankTitleManagement.tsx","../src/admin/components/ParticipantManagement.tsx","../src/common/colors.ts","../src/admin/components/TournamentManagementPage.tsx","../src/common/models/Participant.ts","../src/common/models/Platform.ts","../src/common/extend.ts","../src/admin/index.ts"],"sourcesContent":["import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Switch from 'flarum/common/components/Switch';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport m, { Children, VnodeDOM } from 'mithril';\r\n\r\ninterface Platform {\r\n  id: number;\r\n  attributes: {\r\n    name: string;\r\n    iconUrl?: string;\r\n    iconClass?: string;\r\n    isActive: boolean;\r\n    displayOrder: number;\r\n  };\r\n}\r\n\r\nexport default class PlatformManagement extends Component {\r\n  private loading = true;\r\n  private platforms: Platform[] = [];\r\n  private newPlatformName = Stream('');\r\n  private newPlatformIconUrl = Stream('');\r\n  private newPlatformIconClass = Stream('');\r\n  private submitting = false;\r\n\r\n  oninit(vnode: VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadPlatforms();\r\n  }\r\n\r\n  view(): Children {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"PlatformManagement\">\r\n        <div className=\"PlatformManagement-header\">\r\n          <h3>{app.translator.trans('wusong8899-tournament-widget.admin.platforms.title')}</h3>\r\n        </div>\r\n\r\n        <div className=\"PlatformManagement-addForm\">\r\n          <h4>{app.translator.trans('wusong8899-tournament-widget.admin.platforms.add_button')}</h4>\r\n          \r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.platforms.name_label')}</label>\r\n            <input\r\n              className=\"FormControl\"\r\n              type=\"text\"\r\n              value={this.newPlatformName()}\r\n              onchange={(e: Event) => this.newPlatformName((e.target as HTMLInputElement).value)}\r\n              placeholder={app.translator.trans('wusong8899-tournament-widget.admin.platforms.name_help')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.platforms.icon_url_label')}</label>\r\n            <input\r\n              className=\"FormControl\"\r\n              type=\"url\"\r\n              value={this.newPlatformIconUrl()}\r\n              onchange={(e: Event) => this.newPlatformIconUrl((e.target as HTMLInputElement).value)}\r\n              placeholder={app.translator.trans('wusong8899-tournament-widget.admin.platforms.icon_url_help')}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.platforms.icon_class_label')}</label>\r\n            <input\r\n              className=\"FormControl\"\r\n              type=\"text\"\r\n              value={this.newPlatformIconClass()}\r\n              onchange={(e: Event) => this.newPlatformIconClass((e.target as HTMLInputElement).value)}\r\n              placeholder={app.translator.trans('wusong8899-tournament-widget.admin.platforms.icon_class_help')}\r\n            />\r\n          </div>\r\n\r\n          <Button\r\n            className=\"Button Button--primary\"\r\n            loading={this.submitting}\r\n            onclick={() => this.createPlatform()}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.platforms.add_button')}\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"PlatformManagement-list\">\r\n          <h4>Existing Platforms</h4>\r\n          {this.platforms.length > 0 ? (\r\n            <div className=\"PlatformList\">\r\n              {this.platforms.map((platform) => (\r\n                <div key={platform.id} className=\"PlatformList-item\">\r\n                  <div className=\"platform-info\">\r\n                    <div className=\"platform-icon\">\r\n                      {this.renderPlatformIcon(platform)}\r\n                    </div>\r\n                    <div className=\"platform-details\">\r\n                      <div className=\"platform-name\">{platform.attributes.name}</div>\r\n                      <div className=\"platform-meta\">\r\n                        {platform.attributes.iconUrl && (\r\n                          <span className=\"meta-item\">URL Icon: {platform.attributes.iconUrl}</span>\r\n                        )}\r\n                        {platform.attributes.iconClass && (\r\n                          <span className=\"meta-item\">CSS Icon: {platform.attributes.iconClass}</span>\r\n                        )}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"platform-controls\">\r\n                    <Switch\r\n                      state={platform.attributes.isActive}\r\n                      onchange={(checked: boolean) => this.updatePlatform(platform.id, { isActive: checked })}\r\n                    >\r\n                      {platform.attributes.isActive \r\n                        ? app.translator.trans('wusong8899-tournament-widget.admin.platforms.enable')\r\n                        : app.translator.trans('wusong8899-tournament-widget.admin.platforms.disable')\r\n                      }\r\n                    </Switch>\r\n                    <Button\r\n                      className=\"Button Button--danger Button--icon\"\r\n                      icon=\"fas fa-trash\"\r\n                      onclick={() => this.deletePlatform(platform.id)}\r\n                      title=\"Delete Platform\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"PlatformList-empty\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.platforms.empty')}\r\n            </div>\r\n          )}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async loadPlatforms(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/tournament/platforms'\r\n      });\r\n\r\n      this.platforms = response.data || [];\r\n      this.loading = false;\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Failed to load platforms:', error);\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async createPlatform(): Promise<void> {\r\n    if (!this.newPlatformName().trim()) {\r\n      app.alerts.show({ type: 'error' }, 'Platform name is required');\r\n      return;\r\n    }\r\n\r\n    this.submitting = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const response = await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/tournament/platforms',\r\n        body: {\r\n          data: {\r\n            type: 'platforms',\r\n            attributes: {\r\n              name: this.newPlatformName(),\r\n              iconUrl: this.newPlatformIconUrl() || null,\r\n              iconClass: this.newPlatformIconClass() || null,\r\n              isActive: true,\r\n              displayOrder: this.platforms.length\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      this.platforms.push(response.data);\r\n      \r\n      // Clear form\r\n      this.newPlatformName('');\r\n      this.newPlatformIconUrl('');\r\n      this.newPlatformIconClass('');\r\n\r\n      app.alerts.show({ type: 'success' }, 'Platform created successfully');\r\n    } catch (error) {\r\n      console.error('Failed to create platform:', error);\r\n      app.alerts.show({ type: 'error' }, 'Failed to create platform');\r\n    } finally {\r\n      this.submitting = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async updatePlatform(id: number, attributes: Partial<Platform['attributes']>): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'PATCH',\r\n        url: app.forum.attribute('apiUrl') + `/tournament/platforms/` + id,\r\n        body: {\r\n          data: {\r\n            type: 'platforms',\r\n            attributes\r\n          }\r\n        }\r\n      });\r\n\r\n      // Update platform in list\r\n      const index = this.platforms.findIndex(p => p.id === id);\r\n      if (index !== -1) {\r\n        this.platforms[index] = response.data;\r\n        m.redraw();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to update platform:', error);\r\n      app.alerts.show({ type: 'error' }, 'Failed to update platform');\r\n    }\r\n  }\r\n\r\n  private async deletePlatform(id: number): Promise<void> {\r\n    if (!confirm('Are you sure you want to delete this platform?')) {\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await app.request({\r\n        method: 'DELETE',\r\n        url: app.forum.attribute('apiUrl') + `/tournament/platforms/${id}`\r\n      });\r\n\r\n      this.platforms = this.platforms.filter(p => p.id !== id);\r\n      app.alerts.show({ type: 'success' }, 'Platform deleted successfully');\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Failed to delete platform:', error);\r\n      app.alerts.show({ type: 'error' }, 'Failed to delete platform');\r\n    }\r\n  }\r\n\r\n  private renderPlatformIcon(platform: Platform): Children {\r\n    const { iconUrl, iconClass } = platform.attributes;\r\n    \r\n    if (iconUrl) {\r\n      return <img src={iconUrl} alt={platform.attributes.name} className=\"platform-icon-img\" />;\r\n    } else if (iconClass) {\r\n      return <i className={`platform-icon-css ${iconClass}`}></i>;\r\n    } else {\r\n      return <i className=\"platform-icon-css fas fa-gamepad\"></i>;\r\n    }\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport type Mithril from 'mithril';\r\n\r\ninterface RankTitleEntry {\r\n  id: string;\r\n  rank: string;\r\n  title: string;\r\n}\r\n\r\nexport default class RankTitleManagement extends Component {\r\n  private loading = true;\r\n  private saving = false;\r\n  private rankTitles: { [key: string]: string } = {};\r\n  private entries: RankTitleEntry[] = [];\r\n  private nextId = 1;\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadRankTitles();\r\n  }\r\n\r\n  view(): Mithril.Children {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"RankTitleManagement\">\r\n        <div className=\"RankTitleManagement-header\">\r\n          <h3>{app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.title')}</h3>\r\n          <div className=\"helpText\">\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.help')}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"RankTitleManagement-list\">\r\n          <div className=\"RankTitleManagement-listHeader\">\r\n            <div className=\"rank-column\">{app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.rank_label')}</div>\r\n            <div className=\"title-column\">{app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.title_label')}</div>\r\n            <div className=\"actions-column\">Actions</div>\r\n          </div>\r\n\r\n          {this.entries.map((entry) => (\r\n            <div key={entry.id} className=\"RankTitleManagement-entry\">\r\n              <div className=\"rank-column\">\r\n                <input\r\n                  className=\"FormControl\"\r\n                  type=\"text\"\r\n                  value={entry.rank}\r\n                  placeholder=\"1, 2-5, default\"\r\n                  onchange={(e: Event) => this.updateEntryRank(entry.id, (e.target as HTMLInputElement).value)}\r\n                />\r\n              </div>\r\n              <div className=\"title-column\">\r\n                <input\r\n                  className=\"FormControl\"\r\n                  type=\"text\"\r\n                  value={entry.title}\r\n                  placeholder={app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.title_placeholder')}\r\n                  onchange={(e: Event) => this.updateEntryTitle(entry.id, (e.target as HTMLInputElement).value)}\r\n                />\r\n              </div>\r\n              <div className=\"actions-column\">\r\n                <Button\r\n                  className=\"Button Button--icon\"\r\n                  icon=\"fas fa-times\"\r\n                  onclick={() => this.removeEntry(entry.id)}\r\n                  title=\"Remove\"\r\n                />\r\n              </div>\r\n            </div>\r\n          ))}\r\n        </div>\r\n\r\n        <div className=\"RankTitleManagement-actions\">\r\n          <Button\r\n            className=\"Button\"\r\n            icon=\"fas fa-plus\"\r\n            onclick={() => this.addEntry()}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.add_rank')}\r\n          </Button>\r\n\r\n          <Button\r\n            className=\"Button Button--primary\"\r\n            loading={this.saving}\r\n            onclick={() => this.saveRankTitles()}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.save_button')}\r\n          </Button>\r\n        </div>\r\n\r\n        <div className=\"RankTitleManagement-preview\">\r\n          <h4>{app.translator.trans('wusong8899-tournament-widget.admin.rank_titles.preview_title')}</h4>\r\n          <div className=\"preview-content\">\r\n            {this.renderPreview()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async loadRankTitles(): Promise<void> {\r\n    try {\r\n      const response = await app.request({\r\n        method: 'GET',\r\n        url: app.forum.attribute('apiUrl') + '/tournament/rank-titles'\r\n      });\r\n\r\n      this.rankTitles = response.data.attributes.rankTitles || {};\r\n      this.entriesFromRankTitles();\r\n      this.loading = false;\r\n      m.redraw();\r\n    } catch (error) {\r\n      console.error('Failed to load rank titles:', error);\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private entriesFromRankTitles(): void {\r\n    this.entries = [];\r\n    this.nextId = 1;\r\n\r\n    Object.entries(this.rankTitles).forEach(([rank, title]) => {\r\n      this.entries.push({\r\n        id: String(this.nextId++),\r\n        rank,\r\n        title\r\n      });\r\n    });\r\n\r\n    // Add empty entry if no entries exist\r\n    if (this.entries.length === 0) {\r\n      this.addEntry();\r\n    }\r\n  }\r\n\r\n  private addEntry(): void {\r\n    this.entries.push({\r\n      id: String(this.nextId++),\r\n      rank: '',\r\n      title: ''\r\n    });\r\n    m.redraw();\r\n  }\r\n\r\n  private removeEntry(id: string): void {\r\n    this.entries = this.entries.filter(entry => entry.id !== id);\r\n    m.redraw();\r\n  }\r\n\r\n  private updateEntryRank(id: string, rank: string): void {\r\n    const entry = this.entries.find(e => e.id === id);\r\n    if (entry) {\r\n      entry.rank = rank;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private updateEntryTitle(id: string, title: string): void {\r\n    const entry = this.entries.find(e => e.id === id);\r\n    if (entry) {\r\n      entry.title = title;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async saveRankTitles(): Promise<void> {\r\n    this.saving = true;\r\n    m.redraw();\r\n\r\n    // Convert entries to rank titles object\r\n    const rankTitles: { [key: string]: string } = {};\r\n    this.entries.forEach(entry => {\r\n      if (entry.rank.trim() && entry.title.trim()) {\r\n        rankTitles[entry.rank.trim()] = entry.title.trim();\r\n      }\r\n    });\r\n\r\n    try {\r\n      await app.request({\r\n        method: 'POST',\r\n        url: app.forum.attribute('apiUrl') + '/tournament/rank-titles',\r\n        body: {\r\n          data: {\r\n            type: 'rank-titles',\r\n            attributes: {\r\n              rankTitles\r\n            }\r\n          }\r\n        }\r\n      });\r\n\r\n      this.rankTitles = rankTitles;\r\n      app.alerts.show({ type: 'success' }, app.translator.trans('core.admin.saved_message'));\r\n    } catch (error) {\r\n      console.error('Failed to save rank titles:', error);\r\n      app.alerts.show({ type: 'error' }, 'Failed to save rank titles');\r\n    } finally {\r\n      this.saving = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private renderPreview(): Mithril.Children {\r\n    const previewRanks = [1, 2, 3, 5, 15, 25];\r\n    \r\n    return (\r\n      <div className=\"preview-list\">\r\n        {previewRanks.map(rank => {\r\n          const title = this.getTitleForRank(rank);\r\n          return (\r\n            <div key={rank} className=\"preview-item\">\r\n              <span className=\"preview-rank\">#{rank}</span>\r\n              <span className=\"preview-title\">{title}</span>\r\n            </div>\r\n          );\r\n        })}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private getTitleForRank(rank: number): string {\r\n    // Use current entries to determine title\r\n    const rankTitles: { [key: string]: string } = {};\r\n    this.entries.forEach(entry => {\r\n      if (entry.rank.trim() && entry.title.trim()) {\r\n        rankTitles[entry.rank.trim()] = entry.title.trim();\r\n      }\r\n    });\r\n\r\n    // Check exact match first\r\n    if (rankTitles[String(rank)]) {\r\n      return rankTitles[String(rank)];\r\n    }\r\n\r\n    // Check ranges\r\n    for (const [key, title] of Object.entries(rankTitles)) {\r\n      if (key.includes('-')) {\r\n        const [start, end] = key.split('-').map(Number);\r\n        if (rank >= start && rank <= end) {\r\n          return title;\r\n        }\r\n      }\r\n    }\r\n\r\n    // Return default\r\n    return rankTitles.default || '参赛选手';\r\n  }\r\n}","import app from 'flarum/admin/app';\r\nimport Component from 'flarum/common/Component';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport extractText from 'flarum/common/utils/extractText';\r\nimport m, { VnodeDOM } from 'mithril';\r\n\r\n// JSON:API response types\r\ninterface JsonApiResource {\r\n  id: string;\r\n  type: string;\r\n  attributes: Record<string, unknown>;\r\n  relationships?: Record<string, {\r\n    data?: { id: string; type: string } | null;\r\n  }>;\r\n}\r\n\r\ninterface JsonApiResponse {\r\n  data: JsonApiResource[];\r\n  included?: JsonApiResource[];\r\n}\r\n\r\ninterface AdminParticipant {\r\n  id: number;\r\n  amount: number;\r\n  score: number;\r\n  initialScore: number;\r\n  platformUsername: string;\r\n  isApproved: boolean;\r\n  approvedAt?: string;\r\n  createdAt: string;\r\n  user: {\r\n    id: number;\r\n    username: string;\r\n    displayName: string;\r\n    avatarUrl?: string;\r\n    money: number;\r\n  };\r\n  platform?: {\r\n    id: number;\r\n    name: string;\r\n  };\r\n  approvedBy?: {\r\n    id: number;\r\n    username: string;\r\n    displayName: string;\r\n  };\r\n}\r\n\r\nexport default class ParticipantManagement extends Component {\r\n  private participants: AdminParticipant[] = [];\r\n  private loading = false;\r\n  private saving = false;\r\n  private deleting = false;\r\n  private approving = false;\r\n  private activeTab = 'all'; // 'all', 'pending', 'approved'\r\n  private editingScores: Record<number, number | string> = {};\r\n\r\n  oninit(vnode: VnodeDOM) {\r\n    super.oninit(vnode);\r\n    this.loadParticipants();\r\n  }\r\n\r\n  view() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    const filteredParticipants = this.getFilteredParticipants();\r\n    const pendingCount = this.participants.filter(p => !p.isApproved).length;\r\n\r\n    return (\r\n      <div className=\"ParticipantManagement\">\r\n        <div className=\"ParticipantManagement-header\">\r\n          <h3>{app.translator.trans('wusong8899-tournament-widget.admin.participants.title')}</h3>\r\n          <p className=\"helpText\">\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.participants.description')}\r\n          </p>\r\n        </div>\r\n\r\n        {/* Tab navigation */}\r\n        <div className=\"ParticipantManagement-tabs\">\r\n          <button \r\n            className={this.activeTab === 'all' ? 'Button Button--primary' : 'Button'}\r\n            onclick={() => this.switchTab('all')}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.participants.tab_all')} ({this.participants.length})\r\n          </button>\r\n          <button \r\n            className={this.activeTab === 'pending' ? 'Button Button--primary' : 'Button'}\r\n            onclick={() => this.switchTab('pending')}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.participants.tab_pending')} ({pendingCount})\r\n          </button>\r\n          <button \r\n            className={this.activeTab === 'approved' ? 'Button Button--primary' : 'Button'}\r\n            onclick={() => this.switchTab('approved')}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.participants.tab_approved')} ({this.participants.length - pendingCount})\r\n          </button>\r\n        </div>\r\n\r\n        {filteredParticipants.length === 0 ? (\r\n          <div className=\"ParticipantManagement-empty\">\r\n            <p>{app.translator.trans('wusong8899-tournament-widget.admin.participants.no_participants')}</p>\r\n          </div>\r\n        ) : (\r\n          <div className=\"ParticipantManagement-table\">\r\n            <table className=\"Table\">\r\n              <thead>\r\n                <tr>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.user')}</th>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.platform')}</th>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.status')}</th>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.initial_score')}</th>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.score')}</th>\r\n                  <th>{app.translator.trans('wusong8899-tournament-widget.admin.participants.actions')}</th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {filteredParticipants.map((participant) => (\r\n                  <tr key={participant.id}>\r\n                    <td>\r\n                      <div className=\"ParticipantManagement-user\">\r\n                        {participant.user.avatarUrl && (\r\n                          <img\r\n                            src={participant.user.avatarUrl}\r\n                            alt={participant.user.displayName}\r\n                            className=\"Avatar Avatar--size-small\"\r\n                          />\r\n                        )}\r\n                        <span className=\"username\">\r\n                          {participant.user.displayName || participant.user.username}\r\n                        </span>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"ParticipantManagement-platform\">\r\n                        <span className=\"platform-name\">\r\n                          {participant.platform?.name || 'Unknown'}\r\n                        </span>\r\n                        {participant.platformUsername && (\r\n                          <span className=\"platform-username\">\r\n                            ({participant.platformUsername})\r\n                          </span>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div className=\"ParticipantManagement-status\">\r\n                        {participant.isApproved ? (\r\n                          <span className=\"Badge Badge--success\">\r\n                            {app.translator.trans('wusong8899-tournament-widget.admin.participants.status_approved')}\r\n                          </span>\r\n                        ) : (\r\n                          <span className=\"Badge Badge--danger\">\r\n                            {app.translator.trans('wusong8899-tournament-widget.admin.participants.status_pending')}\r\n                          </span>\r\n                        )}\r\n                        {participant.approvedAt && participant.approvedBy && (\r\n                          <div className=\"ParticipantManagement-approvedInfo\">\r\n                            <small>\r\n                              {app.translator.trans('wusong8899-tournament-widget.admin.participants.approved_by', {\r\n                                username: participant.approvedBy.displayName || participant.approvedBy.username,\r\n                                date: new Date(participant.approvedAt).toLocaleDateString()\r\n                              })}\r\n                            </small>\r\n                          </div>\r\n                        )}\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div \r\n                        className=\"ParticipantManagement-initialScore\"\r\n                        data-negative={participant.initialScore < 0 ? \"true\" : \"false\"}\r\n                        data-positive={participant.initialScore > 0 ? \"true\" : \"false\"}\r\n                      >\r\n                        <strong>{participant.initialScore || 0}</strong>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div style=\"display: flex; align-items: center; gap: 8px;\">\r\n                        <input\r\n                          type=\"number\"\r\n                          className=\"FormControl\"\r\n                          style=\"width: 100px;\"\r\n                          value={this.editingScores[participant.id] ?? participant.score}\r\n                          oninput={(e: any) => {\r\n                            const value = e.target.value;\r\n                            // Allow negative numbers and empty input during editing\r\n                            if (value === '' || value === '-') {\r\n                              this.editingScores[participant.id] = value;\r\n                            } else {\r\n                              const numValue = parseInt(value);\r\n                              if (!isNaN(numValue)) {\r\n                                this.editingScores[participant.id] = numValue;\r\n                              }\r\n                            }\r\n                          }}\r\n                        />\r\n                        <Button\r\n                          className=\"Button Button--primary Button--size-small\"\r\n                          loading={this.saving}\r\n                          disabled={this.saving || this.deleting || this.approving}\r\n                          onclick={() => this.updateScore(participant)}\r\n                        >\r\n                          {app.translator.trans('wusong8899-tournament-widget.admin.participants.update')}\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                    <td>\r\n                      <div style=\"display: flex; gap: 8px; justify-content: center; flex-wrap: wrap;\">\r\n                        {!participant.isApproved && (\r\n                          <>\r\n                            <Button\r\n                              className=\"Button Button--success Button--size-small\"\r\n                              loading={this.approving}\r\n                              disabled={this.saving || this.deleting || this.approving}\r\n                              onclick={() => this.approveParticipant(participant)}\r\n                            >\r\n                              {app.translator.trans('wusong8899-tournament-widget.admin.participants.approve')}\r\n                            </Button>\r\n                            <Button\r\n                              className=\"Button Button--warning Button--size-small\"\r\n                              loading={this.approving}\r\n                              disabled={this.saving || this.deleting || this.approving}\r\n                              onclick={() => this.rejectParticipant(participant)}\r\n                            >\r\n                              {app.translator.trans('wusong8899-tournament-widget.admin.participants.reject')}\r\n                            </Button>\r\n                          </>\r\n                        )}\r\n                        <Button\r\n                          className=\"Button Button--danger Button--size-small\"\r\n                          loading={this.deleting}\r\n                          disabled={this.saving || this.deleting || this.approving}\r\n                          onclick={() => this.confirmDeleteParticipant(participant)}\r\n                        >\r\n                          {app.translator.trans('wusong8899-tournament-widget.admin.participants.remove')}\r\n                        </Button>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                ))}\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"ParticipantManagement-actions\">\r\n          <Button\r\n            className=\"Button\"\r\n            onclick={() => this.loadParticipants()}\r\n            loading={this.loading}\r\n          >\r\n            {app.translator.trans('wusong8899-tournament-widget.admin.participants.refresh')}\r\n          </Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private async loadParticipants(): Promise<void> {\r\n    this.loading = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const response = await app.request<JsonApiResponse>({\r\n        method: 'GET',\r\n        url: `${app.forum.attribute('apiUrl')}/tournament/participants`,\r\n        params: { include: 'user,platform,approvedBy' },\r\n      });\r\n\r\n      const findIncluded = (type: string, id: string) =>\r\n        response.included?.find((res) => res.type === type && res.id === id);\r\n\r\n      this.participants = (response.data || []).map((res: JsonApiResource): AdminParticipant => {\r\n        const attrs = (res.attributes || {}) as any;\r\n        const rels = (res.relationships || {}) as Record<string, { data?: { id: string; type: string } | null }>;\r\n\r\n        const userRef = rels.user?.data as { id: string; type: string } | undefined;\r\n        const platformRef = rels.platform?.data as { id: string; type: string } | undefined;\r\n        const approvedByRef = rels.approvedBy?.data as { id: string; type: string } | undefined;\r\n\r\n        const userRes = userRef ? findIncluded('users', userRef.id) : undefined;\r\n        const platformRes = platformRef ? findIncluded('platforms', platformRef.id) : undefined;\r\n        const approvedByRes = approvedByRef ? findIncluded('users', approvedByRef.id) : undefined;\r\n\r\n        return {\r\n          id: parseInt(res.id, 10),\r\n          amount: (attrs.score as number) || 0,\r\n          score: (attrs.score as number) || 0,\r\n          initialScore: (attrs.initialScore as number) || 0,\r\n          platformUsername: (attrs.platformUsername as string) || '',\r\n          isApproved: !!attrs.isApproved,\r\n          approvedAt: attrs.approvedAt ? new Date(attrs.approvedAt as string).toISOString() : undefined,\r\n          createdAt: attrs.createdAt ? new Date(attrs.createdAt as string).toISOString() : '',\r\n          user: userRes\r\n            ? {\r\n                id: parseInt(userRes.id, 10),\r\n                username: (userRes.attributes['username'] as string) || 'Unknown',\r\n                displayName:\r\n                  (userRes.attributes['displayName'] as string) ||\r\n                  (userRes.attributes['username'] as string) ||\r\n                  'Unknown',\r\n                avatarUrl: (userRes.attributes['avatarUrl'] as string | undefined) || undefined,\r\n                money: ((userRes.attributes as any)['money'] as number | undefined) ?? 0,\r\n              }\r\n            : {\r\n                id: 0,\r\n                username: 'Deleted User',\r\n                displayName: 'Deleted User',\r\n                money: 0,\r\n              },\r\n          platform: platformRes\r\n            ? {\r\n                id: parseInt(platformRes.id, 10),\r\n                name: (platformRes.attributes['name'] as string) || 'Unknown',\r\n              }\r\n            : undefined,\r\n          approvedBy: approvedByRes\r\n            ? {\r\n                id: parseInt(approvedByRes.id, 10),\r\n                username: (approvedByRes.attributes['username'] as string) || 'Unknown',\r\n                displayName:\r\n                  (approvedByRes.attributes['displayName'] as string) ||\r\n                  (approvedByRes.attributes['username'] as string) ||\r\n                  'Unknown',\r\n              }\r\n            : undefined,\r\n        };\r\n      });\r\n    } catch (error) {\r\n      console.error('Failed to load participants:', error);\r\n      app.alerts.show({ type: 'error' }, app.translator.trans('wusong8899-tournament-widget.admin.participants.load_error'));\r\n    } finally {\r\n      this.loading = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n\r\n  private confirmDeleteParticipant(participant: AdminParticipant): void {\r\n    const confirmMessage = extractText(\r\n      app.translator.trans(\r\n        'wusong8899-tournament-widget.admin.participants.confirm_remove',\r\n        { username: participant.user.displayName || participant.user.username }\r\n      )\r\n    );\r\n\r\n    if (confirm(confirmMessage)) {\r\n      this.deleteParticipant(participant);\r\n    }\r\n  }\r\n\r\n  private async deleteParticipant(participant: AdminParticipant): Promise<void> {\r\n    this.deleting = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const model = app.store.getById('participants', String(participant.id)) as any;\r\n      if (model) {\r\n        await model.delete();\r\n      } else {\r\n        await app.request({\r\n          method: 'DELETE',\r\n          url: `${app.forum.attribute('apiUrl')}/tournament/participants/${participant.id}`\r\n        });\r\n      }\r\n\r\n      // Remove participant from local state\r\n      this.participants = this.participants.filter(p => p.id !== participant.id);\r\n\r\n      app.alerts.show(\r\n        { type: 'success' },\r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.remove_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to delete participant:', error);\r\n      app.alerts.show(\r\n        { type: 'error' },\r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.remove_error')\r\n      );\r\n    } finally {\r\n      this.deleting = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async updateScore(participant: AdminParticipant): Promise<void> {\r\n    const newScore = this.editingScores[participant.id];\r\n    \r\n    // Handle empty or invalid input\r\n    if (newScore === '' || newScore === '-') {\r\n      return;\r\n    }\r\n    \r\n    const scoreValue = typeof newScore === 'number' ? newScore : parseInt(newScore, 10);\r\n    if (isNaN(scoreValue) || scoreValue === participant.score) {\r\n      return; // No change or invalid input\r\n    }\r\n\r\n    this.saving = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      const model = app.store.getById('participants', String(participant.id)) as any;\r\n      if (model) {\r\n        await model.save({ score: scoreValue });\r\n      } else {\r\n        await app.request({\r\n          method: 'PATCH',\r\n          url: `${app.forum.attribute('apiUrl')}/tournament/participants/${participant.id}`,\r\n          body: {\r\n            data: {\r\n              type: 'participants',\r\n              attributes: {\r\n                score: scoreValue,\r\n              },\r\n            },\r\n          },\r\n        });\r\n      }\r\n\r\n      // Update local state\r\n      participant.score = scoreValue;\r\n      participant.amount = scoreValue; // Keep amount in sync\r\n      app.alerts.show({ type: 'success' }, app.translator.trans('wusong8899-tournament-widget.admin.participants.update_success'));\r\n    } catch (error) {\r\n      console.error('Failed to update score:', error);\r\n      app.alerts.show({ type: 'error' }, app.translator.trans('wusong8899-tournament-widget.admin.participants.update_error'));\r\n      // Revert editing score on error\r\n      this.editingScores[participant.id] = participant.score;\r\n    } finally {\r\n      this.saving = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private getFilteredParticipants(): AdminParticipant[] {\r\n    switch (this.activeTab) {\r\n      case 'pending':\r\n        return this.participants.filter(p => !p.isApproved);\r\n      case 'approved':\r\n        return this.participants.filter(p => p.isApproved);\r\n      case 'all':\r\n      default:\r\n        return this.participants;\r\n    }\r\n  }\r\n\r\n  private switchTab(tab: string): void {\r\n    this.activeTab = tab;\r\n    m.redraw();\r\n  }\r\n\r\n  private async approveParticipant(participant: AdminParticipant): Promise<void> {\r\n    this.approving = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/tournament/participants/${participant.id}/approve`,\r\n        body: {\r\n          data: {\r\n            type: 'participants',\r\n            attributes: {\r\n              action: 'approve',\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Update local state\r\n      participant.isApproved = true;\r\n      participant.approvedAt = new Date().toISOString();\r\n      \r\n      app.alerts.show(\r\n        { type: 'success' }, \r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.approve_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to approve participant:', error);\r\n      app.alerts.show(\r\n        { type: 'error' }, \r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.approve_error')\r\n      );\r\n    } finally {\r\n      this.approving = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n\r\n  private async rejectParticipant(participant: AdminParticipant): Promise<void> {\r\n    const confirmMessage = extractText(\r\n      app.translator.trans(\r\n        'wusong8899-tournament-widget.admin.participants.confirm_reject',\r\n        { username: participant.user.displayName || participant.user.username }\r\n      )\r\n    );\r\n\r\n    if (!confirm(confirmMessage)) {\r\n      return;\r\n    }\r\n\r\n    this.approving = true;\r\n    m.redraw();\r\n\r\n    try {\r\n      await app.request({\r\n        method: 'PATCH',\r\n        url: `${app.forum.attribute('apiUrl')}/tournament/participants/${participant.id}/approve`,\r\n        body: {\r\n          data: {\r\n            type: 'participants',\r\n            attributes: {\r\n              action: 'reject',\r\n            },\r\n          },\r\n        },\r\n      });\r\n\r\n      // Remove participant from local state\r\n      this.participants = this.participants.filter(p => p.id !== participant.id);\r\n      \r\n      app.alerts.show(\r\n        { type: 'success' }, \r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.reject_success')\r\n      );\r\n    } catch (error) {\r\n      console.error('Failed to reject participant:', error);\r\n      app.alerts.show(\r\n        { type: 'error' }, \r\n        app.translator.trans('wusong8899-tournament-widget.admin.participants.reject_error')\r\n      );\r\n    } finally {\r\n      this.approving = false;\r\n      m.redraw();\r\n    }\r\n  }\r\n}","// Tournament Widget Color Constants\r\n// These match the LESS variables in less/variables.less\r\n\r\nexport const TOURNAMENT_COLORS = {\r\n  // Primary gradient (matches @tournament-primary-gradient)\r\n  PRIMARY_GRADIENT: 'linear-gradient(75.2deg, #2129a7 0.57%, #132cd1 72.59%)',\r\n  \r\n  // Individual primary colors\r\n  PRIMARY_START: '#2129a7',\r\n  PRIMARY_END: '#132cd1',\r\n  \r\n  // Gold colors\r\n  GOLD: '#ffd700',\r\n  GOLD_DARK: '#e9b424',\r\n  \r\n  // Status colors\r\n  SUCCESS: '#28a745',\r\n  SUCCESS_LIGHT: '#4caf50',\r\n  SUCCESS_BORDER: '#1e7e34',\r\n  ERROR: '#dc3545',\r\n  ERROR_ALT: '#ff4444',\r\n  ERROR_BORDER: '#c82333',\r\n  \r\n  // Ranking colors\r\n  RANK_GOLD: '#ffd700',\r\n  RANK_SILVER: '#c0c0c0',\r\n  RANK_BRONZE: '#cd7f32',\r\n  \r\n  // Neutral colors\r\n  WHITE: '#ffffff',\r\n  BLACK: '#000000',\r\n  GRAY: '#888888',\r\n  GRAY_DARK: '#333333',\r\n  \r\n  // Background colors\r\n  MODAL_BG: '#2a2a3e',\r\n  CONTROL_BG: '#f8f9fa',\r\n  BORDER: '#ddd',\r\n  PLATFORM_COLOR: '#00bcd4',\r\n} as const;\r\n\r\n// Helper function to create background style with image and gradient\r\nexport function createTournamentBackground(imageUrl?: string): string {\r\n  if (imageUrl) {\r\n    return `url(${imageUrl}) center/cover no-repeat, ${TOURNAMENT_COLORS.PRIMARY_GRADIENT}`;\r\n  }\r\n  return TOURNAMENT_COLORS.PRIMARY_GRADIENT;\r\n}","import app from 'flarum/admin/app';\r\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage';\r\nimport Button from 'flarum/common/components/Button';\r\nimport LoadingIndicator from 'flarum/common/components/LoadingIndicator';\r\nimport Select from 'flarum/common/components/Select';\r\nimport Stream from 'flarum/common/utils/Stream';\r\nimport type Mithril from 'mithril';\r\nimport m from 'mithril';\r\nimport extractText from 'flarum/common/utils/extractText';\r\nimport PlatformManagement from './PlatformManagement';\r\nimport RankTitleManagement from './RankTitleManagement';\r\nimport ParticipantManagement from './ParticipantManagement';\r\nimport { TOURNAMENT_COLORS } from '../../common/colors';\r\n\r\nexport default class TournamentManagementPage extends ExtensionPage {\r\n  private activeTab = Stream('general');\r\n  loading = false;\r\n  private validationErrors: Record<string, string> = {};\r\n  private calculatedPrizePool: string = '0';\r\n\r\n  oninit(vnode: Mithril.VnodeDOM) {\r\n    super.oninit(vnode);\r\n    app.setTitle(extractText(app.translator.trans('wusong8899-tournament-widget.admin.title')));\r\n    this.loadPrizePoolData();\r\n  }\r\n\r\n  private async loadPrizePoolData(): Promise<void> {\r\n    try {\r\n      const response = await app.request<{ data?: { attributes?: { prizePool?: string } } }>({\r\n        method: 'GET',\r\n        url: `${app.forum.attribute('apiUrl')}/tournament`,\r\n      });\r\n\r\n      const prize = response?.data?.attributes?.prizePool;\r\n      if (typeof prize === 'string') {\r\n        this.calculatedPrizePool = prize;\r\n        m.redraw();\r\n      } else {\r\n        this.calculatedPrizePool = '0';\r\n        m.redraw();\r\n      }\r\n    } catch (error) {\r\n      console.error('Failed to load prize pool data:', error);\r\n    }\r\n  }\r\n\r\n  content() {\r\n    if (this.loading) {\r\n      return <LoadingIndicator />;\r\n    }\r\n\r\n    return (\r\n      <div className=\"TournamentManagementPage\">\r\n        <div className=\"container\">\r\n          <div className=\"TournamentManagementPage-header\">\r\n            <h2>{app.translator.trans('wusong8899-tournament-widget.admin.title')}</h2>\r\n            <p className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.description')}\r\n            </p>\r\n          </div>\r\n\r\n          <nav className=\"TournamentManagementPage-tabs\">\r\n            {this.renderTab('general', 'wusong8899-tournament-widget.admin.tabs.general')}\r\n            {this.renderTab('platforms', 'wusong8899-tournament-widget.admin.tabs.platforms')}\r\n            {this.renderTab('rank_titles', 'wusong8899-tournament-widget.admin.tabs.rank_titles')}\r\n            {this.renderTab('participants', 'wusong8899-tournament-widget.admin.tabs.participants')}\r\n          </nav>\r\n\r\n          <div className=\"TournamentManagementPage-content\">\r\n            {this.renderTabContent()}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private renderTab(tabName: string, labelKey: string): Mithril.Children {\r\n    const isActive = this.activeTab() === tabName;\r\n    \r\n    return (\r\n      <Button\r\n        className={`Button Button--text TournamentManagementPage-tab ${isActive ? 'active' : ''}`}\r\n        onclick={() => this.activeTab(tabName)}\r\n      >\r\n        {app.translator.trans(labelKey)}\r\n      </Button>\r\n    );\r\n  }\r\n\r\n  private renderTabContent(): Mithril.Children {\r\n    switch (this.activeTab()) {\r\n      case 'general':\r\n        return this.renderGeneralSettings();\r\n      case 'platforms':\r\n        return <PlatformManagement />;\r\n      case 'rank_titles':\r\n        return <RankTitleManagement />;\r\n      case 'participants':\r\n        return <ParticipantManagement />;\r\n      default:\r\n        return this.renderGeneralSettings();\r\n    }\r\n  }\r\n\r\n  private renderGeneralSettings(): Mithril.Children {\r\n    return (\r\n      <div className=\"TournamentManagementPage-generalSettings\">\r\n        <div className=\"Form\">\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.title_label')}</label>\r\n            <input\r\n              className=\"FormControl\"\r\n              type=\"text\"\r\n              bidi={this.setting('wusong8899_tournament.title')}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.title_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.prize_pool_label')}</label>\r\n            <div className=\"FormControl--static\" style={`padding: 8px 12px; background: ${TOURNAMENT_COLORS.CONTROL_BG}; border: 1px solid ${TOURNAMENT_COLORS.BORDER}; border-radius: 4px;`}>\r\n              <strong style={`font-size: 16px; color: ${TOURNAMENT_COLORS.GRAY_DARK};`}>{this.calculatedPrizePool}</strong>\r\n            </div>\r\n            <div className=\"helpText\">\r\n              自动计算：所有参赛者分数总和（包括负数）\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.start_date_label')}</label>\r\n            <input\r\n              className={`FormControl ${this.validationErrors.start_date ? 'FormControl--error' : ''}`}\r\n              type=\"datetime-local\"\r\n              value={this.formatDateForInput(this.setting('wusong8899_tournament.start_date')())}\r\n              step=\"1\"\r\n              onchange={(e: Event) => this.validateAndSetDate((e.target as HTMLInputElement).value)}\r\n            />\r\n            {this.validationErrors.start_date && (\r\n              <div className=\"FormGroup-error\">\r\n                {this.validationErrors.start_date}\r\n              </div>\r\n            )}\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.start_date_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.details_url_label')}</label>\r\n            <input\r\n              className={`FormControl ${this.validationErrors.details_url ? 'FormControl--error' : ''}`}\r\n              type=\"url\"\r\n              bidi={this.setting('wusong8899_tournament.details_url')}\r\n              onchange={(e: Event) => this.validateUrl('details_url', (e.target as HTMLInputElement).value)}\r\n            />\r\n            {this.validationErrors.details_url && (\r\n              <div className=\"FormGroup-error\">\r\n                {this.validationErrors.details_url}\r\n              </div>\r\n            )}\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.details_url_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.background_image_label')}</label>\r\n            <input\r\n              className={`FormControl ${this.validationErrors.background_image ? 'FormControl--error' : ''}`}\r\n              type=\"url\"\r\n              bidi={this.setting('wusong8899_tournament.background_image')}\r\n              onchange={(e: Event) => this.validateUrl('background_image', (e.target as HTMLInputElement).value)}\r\n            />\r\n            {this.validationErrors.background_image && (\r\n              <div className=\"FormGroup-error\">\r\n                {this.validationErrors.background_image}\r\n              </div>\r\n            )}\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.background_image_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.header_title_label')}</label>\r\n            <input\r\n              className=\"FormControl\"\r\n              type=\"text\"\r\n              bidi={this.setting('wusong8899_tournament.header_title')}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.header_title_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.header_image_label')}</label>\r\n            <input\r\n              className={`FormControl ${this.validationErrors.header_image ? 'FormControl--error' : ''}`}\r\n              type=\"url\"\r\n              bidi={this.setting('wusong8899_tournament.header_image')}\r\n              onchange={(e: Event) => this.validateUrl('header_image', (e.target as HTMLInputElement).value)}\r\n            />\r\n            {this.validationErrors.header_image && (\r\n              <div className=\"FormGroup-error\">\r\n                {this.validationErrors.header_image}\r\n              </div>\r\n            )}\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.header_image_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.preview_limit_label')}</label>\r\n            <input\r\n              className={`FormControl ${this.validationErrors.preview_limit ? 'FormControl--error' : ''}`}\r\n              type=\"number\"\r\n              min=\"1\"\r\n              max=\"50\"\r\n              bidi={this.setting('wusong8899_tournament.preview_limit')}\r\n              onchange={(e: Event) => this.validatePreviewLimit((e.target as HTMLInputElement).value)}\r\n            />\r\n            {this.validationErrors.preview_limit && (\r\n              <div className=\"FormGroup-error\">\r\n                {this.validationErrors.preview_limit}\r\n              </div>\r\n            )}\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.preview_limit_help')}\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"Form-group\">\r\n            <label className=\"FormLabel\">{app.translator.trans('wusong8899-tournament-widget.admin.settings.sort_order_label')}</label>\r\n            <Select\r\n              value={this.setting('wusong8899_tournament.sort_order')() || 'desc'}\r\n              onchange={this.setting('wusong8899_tournament.sort_order')}\r\n              options={{\r\n                'desc': app.translator.trans('wusong8899-tournament-widget.admin.settings.sort_order_desc'),\r\n                'asc': app.translator.trans('wusong8899-tournament-widget.admin.settings.sort_order_asc')\r\n              }}\r\n            />\r\n            <div className=\"helpText\">\r\n              {app.translator.trans('wusong8899-tournament-widget.admin.settings.sort_order_help')}\r\n            </div>\r\n          </div>\r\n\r\n          {this.submitButton()}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  private validateUrl(field: string, url: string): void {\r\n    if (!url.trim()) {\r\n      // Empty URL is valid (optional field)\r\n      delete this.validationErrors[field];\r\n      this.setting(`wusong8899_tournament.${field}`)(url);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      new URL(url);\r\n      delete this.validationErrors[field];\r\n      this.setting(`wusong8899_tournament.${field}`)(url);\r\n    } catch {\r\n      this.validationErrors[field] = extractText(\r\n        app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_url')\r\n      );\r\n    }\r\n    m.redraw();\r\n  }\r\n\r\n  private validateAndSetDate(dateStr: string): void {\r\n    if (!dateStr.trim()) {\r\n      delete this.validationErrors.start_date;\r\n      this.setting('wusong8899_tournament.start_date')(dateStr);\r\n      return;\r\n    }\r\n\r\n    try {\r\n      const date = new Date(dateStr);\r\n      if (isNaN(date.getTime())) {\r\n        throw new Error('Invalid date');\r\n      }\r\n      \r\n      // Convert to ISO string format that backend expects\r\n      const isoString = date.toISOString();\r\n      delete this.validationErrors.start_date;\r\n      this.setting('wusong8899_tournament.start_date')(isoString);\r\n    } catch {\r\n      this.validationErrors.start_date = extractText(\r\n        app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_date')\r\n      );\r\n    }\r\n    m.redraw();\r\n  }\r\n\r\n  private validatePreviewLimit(value: string): void {\r\n    if (!value.trim()) {\r\n      // Use default value of 5 if empty\r\n      delete this.validationErrors.preview_limit;\r\n      this.setting('wusong8899_tournament.preview_limit')('5');\r\n      return;\r\n    }\r\n\r\n    const num = parseInt(value);\r\n    if (isNaN(num) || num < 1 || num > 50) {\r\n      this.validationErrors.preview_limit = extractText(\r\n        app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_preview_limit')\r\n      );\r\n    } else {\r\n      delete this.validationErrors.preview_limit;\r\n      this.setting('wusong8899_tournament.preview_limit')(value);\r\n    }\r\n    m.redraw();\r\n  }\r\n\r\n  private formatDateForInput(isoString: string): string {\r\n    if (!isoString) return '';\r\n    try {\r\n      const date = new Date(isoString);\r\n      if (isNaN(date.getTime())) return '';\r\n      \r\n      // Format for datetime-local input (YYYY-MM-DDTHH:mm:ss)\r\n      const year = date.getFullYear();\r\n      const month = String(date.getMonth() + 1).padStart(2, '0');\r\n      const day = String(date.getDate()).padStart(2, '0');\r\n      const hours = String(date.getHours()).padStart(2, '0');\r\n      const minutes = String(date.getMinutes()).padStart(2, '0');\r\n      const seconds = String(date.getSeconds()).padStart(2, '0');\r\n      \r\n      return `${year}-${month}-${day}T${hours}:${minutes}:${seconds}`;\r\n    } catch {\r\n      return '';\r\n    }\r\n  }\r\n\r\n  saveSettings(e: any) {\r\n    // Clear any existing validation errors\r\n    this.validationErrors = {};\r\n    \r\n    // Validate before saving\r\n    let hasErrors = false;\r\n    \r\n    const detailsUrl = this.setting('wusong8899_tournament.details_url')();\r\n    if (detailsUrl && detailsUrl.trim()) {\r\n      try {\r\n        new URL(detailsUrl);\r\n      } catch {\r\n        this.validationErrors.details_url = extractText(\r\n          app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_url')\r\n        );\r\n        hasErrors = true;\r\n      }\r\n    }\r\n    \r\n    const backgroundImage = this.setting('wusong8899_tournament.background_image')();\r\n    if (backgroundImage && backgroundImage.trim()) {\r\n      try {\r\n        new URL(backgroundImage);\r\n      } catch {\r\n        this.validationErrors.background_image = extractText(\r\n          app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_url')\r\n        );\r\n        hasErrors = true;\r\n      }\r\n    }\r\n    \r\n    const headerImage = this.setting('wusong8899_tournament.header_image')();\r\n    if (headerImage && headerImage.trim()) {\r\n      try {\r\n        new URL(headerImage);\r\n      } catch {\r\n        this.validationErrors.header_image = extractText(\r\n          app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_url')\r\n        );\r\n        hasErrors = true;\r\n      }\r\n    }\r\n    \r\n    const previewLimit = this.setting('wusong8899_tournament.preview_limit')();\r\n    if (previewLimit && previewLimit.trim()) {\r\n      const num = parseInt(previewLimit);\r\n      if (isNaN(num) || num < 1 || num > 50) {\r\n        this.validationErrors.preview_limit = extractText(\r\n          app.translator.trans('wusong8899-tournament-widget.admin.validation.invalid_preview_limit')\r\n        );\r\n        hasErrors = true;\r\n      }\r\n    }\r\n    \r\n    if (hasErrors) {\r\n      app.alerts.show({ type: 'error' }, app.translator.trans('wusong8899-tournament-widget.admin.validation.fix_errors'));\r\n      m.redraw();\r\n      return Promise.resolve();\r\n    }\r\n    \r\n    return super.saveSettings(e as any).then(\r\n      () => {\r\n        // Flarum automatically shows success message\r\n      },\r\n      (error) => {\r\n        console.error('Settings save error:', error);\r\n        const errorMessage =\r\n          error?.response?.errors?.[0]?.detail ||\r\n          extractText(app.translator.trans('wusong8899-tournament-widget.admin.settings.save_error'));\r\n        app.alerts.show({ type: 'error' }, errorMessage);\r\n      }\r\n    );\r\n  }\r\n}","import Model from \"flarum/common/Model\";\r\nimport User from \"flarum/common/models/User\";\r\nimport Platform from \"./Platform\";\r\n\r\nexport default class Participant extends Model {\r\n  platformAccount = Model.attribute<string>(\"platformAccount\");\r\n  platformUsername = Model.attribute<string>(\"platformUsername\");\r\n  score = Model.attribute<number>(\"score\");\r\n  initialScore = Model.attribute<number>(\"initialScore\");\r\n  isApproved = Model.attribute<boolean>(\"isApproved\");\r\n  approvedAt = Model.attribute<Date | null>(\r\n    \"approvedAt\",\r\n    (attr: unknown) =>\r\n      Model.transformDate(attr as string | null | undefined) ?? null\r\n  );\r\n  createdAt = Model.attribute<Date | null>(\r\n    \"createdAt\",\r\n    (attr: unknown) =>\r\n      Model.transformDate(attr as string | null | undefined) ?? null\r\n  );\r\n  updatedAt = Model.attribute<Date | null>(\r\n    \"updatedAt\",\r\n    (attr: unknown) =>\r\n      Model.transformDate(attr as string | null | undefined) ?? null\r\n  );\r\n\r\n  user = Model.hasOne<User>(\"user\");\r\n  platform = Model.hasOne<Platform>(\"platform\");\r\n  approvedBy = Model.hasOne<User>(\"approvedBy\");\r\n\r\n  apiEndpoint(): string {\r\n    return \"/tournament/participants\";\r\n  }\r\n}\r\n","import Model from \"flarum/common/Model\";\r\n\r\nexport default class Platform extends Model {\r\n  name = Model.attribute<string>(\"name\");\r\n  iconUrl = Model.attribute<string | null>(\"iconUrl\");\r\n  iconClass = Model.attribute<string | null>(\"iconClass\");\r\n  isActive = Model.attribute<boolean>(\"isActive\");\r\n  displayOrder = Model.attribute<number>(\"displayOrder\");\r\n  usesUrlIcon = Model.attribute<boolean>(\"usesUrlIcon\");\r\n  usesCssIcon = Model.attribute<boolean>(\"usesCssIcon\");\r\n\r\n  apiEndpoint(): string {\r\n    return \"/tournament/platforms\";\r\n  }\r\n}\r\n","import Extend from \"flarum/common/extenders\";\r\nimport Participant from \"./models/Participant\";\r\nimport Platform from \"./models/Platform\";\r\n\r\nexport default [\r\n  new Extend.Store()\r\n    .add(\"participants\", Participant)\r\n    .add(\"platforms\", Platform),\r\n];\r\n","import app from \"flarum/admin/app\";\r\nimport TournamentManagementPage from \"./components/TournamentManagementPage\";\r\n\r\napp.initializers.add(\"wusong8899-tournament-widget\", () => {\r\n  app.extensionData\r\n    .for(\"wusong8899-tournament-widget\")\r\n    .registerPage(TournamentManagementPage)\r\n    .registerPermission(\r\n      {\r\n        icon: \"fas fa-trophy\",\r\n        label: app.translator.trans(\r\n          \"wusong8899-tournament-widget.admin.permissions.participate\"\r\n        ),\r\n        permission: \"tournament.participate\",\r\n      },\r\n      \"start\"\r\n    )\r\n    .registerPermission(\r\n      {\r\n        icon: \"fas fa-cog\",\r\n        label: app.translator.trans(\r\n          \"wusong8899-tournament-widget.admin.permissions.manage_platforms\"\r\n        ),\r\n        permission: \"tournament.managePlatforms\",\r\n      },\r\n      \"moderate\"\r\n    );\r\n});\r\n\r\nexport { default as extend } from \"../common/extend\";\r\n"],"names":["PlatformManagement","Component","Stream","vnode","LoadingIndicator","m","app","e","Button","platform","Switch","checked","response","error","id","attributes","index","p","iconUrl","iconClass","RankTitleManagement","entry","rank","title","rankTitles","previewRanks","key","start","end","ParticipantManagement","filteredParticipants","pendingCount","participant","value","numValue","findIncluded","type","res","attrs","rels","userRef","platformRef","approvedByRef","userRes","platformRes","approvedByRes","confirmMessage","extractText","model","newScore","scoreValue","tab","TOURNAMENT_COLORS","TournamentManagementPage","ExtensionPage","prize","tabName","labelKey","isActive","Select","field","url","dateStr","date","isoString","num","year","month","day","hours","minutes","seconds","hasErrors","detailsUrl","backgroundImage","headerImage","previewLimit","errorMessage","Participant","Model","attr","Platform","Extend"],"mappings":"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"}